{
	"info": {
		"_postman_id": "e303f23c-e47c-43df-b508-ec742576e2f9",
		"name": "API Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38978595"
	},
	"item": [
		{
			"name": "API Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Access token is not null\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.accessToken).to.not.be.null;\r",
							"})\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"token\", pm.response.json().accessToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var name = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"var email = pm.variables.replaceIn(name + \"@test.com\");\r",
							"\r",
							"pm.collectionVariables.set(\"name\", name);\r",
							"pm.collectionVariables.set(\"email\", email);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"{{name}}\",\n   \"clientEmail\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Response message is OK\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"OK\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/status",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify all response values\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Define expected values\r",
							"    const expectedValues = {\r",
							"        id: 1,\r",
							"        name: \"The Russian\",\r",
							"        author: \"James Patterson and James O. Born\",\r",
							"        isbn: \"1780899475\",\r",
							"        type: \"fiction\",\r",
							"        price: 12.98,\r",
							"        'current-stock': 12,\r",
							"        available: true,\r",
							"    };\r",
							"\r",
							"    // Iterate through expected values and compare with actual values\r",
							"    for (const key in expectedValues) {\r",
							"        pm.expect(jsonData[key]).to.equal(expectedValues[key]);\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books/1",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Verify created value is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.created).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify orderId is not null\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.orderId).to.not.be.null;\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"orderId\", pm.response.json().orderId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"Nini\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 10000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/{{orderId}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/{{orderId}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		},
		{
			"key": "orderID",
			"value": ""
		}
	]
}